# Copyright (C) 2025 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This workflow is triggered by analyze.yml
name: Perfetto CI [android]
on:
  workflow_call:

  workflow_dispatch: # This allows manual triggering
    inputs:
      pr_number:
        description: 'Pull Request Number'
        required: true
        type: number
env:
  # /tmp/cache contains {ccache, bazelcache} and generally any other cache
  # that should be persisted across jobs, but only updated from the main
  # branch. This is populated by the "actions/cache/restore" step below.
  PERFETTO_CACHE_DIR: /tmp/cache
  PERFETTO_ARTIFACTS_ROOT: /tmp/artifacts
jobs:
  android:
    runs-on: self-hosted
    timeout-minutes: 45
    steps:
    - name: checkout PR ${{ github.event.inputs.pr_number }}.
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.pr_number && format('refs/pull/{0}/head', github.event.inputs.pr_number) || github.ref }}

    - name: Show PR number
      run: |
        echo "Running for PR: ${{ github.event.inputs.pr_number }}"
        echo "Current ref: ${{ github.ref }}"    

    - name: Setup Google Cloud config
      run: |
        echo "$SVC_TOKEN_PATH"
        gcloud config set auth/access_token_file $SVC_TOKEN_PATH

    - name: Check GCS access
      run: |
        gcloud storage ls gs://perfetto-ci-artifacts | wc -l

    - name: Generate and rsync new content
      env:
        PERFETTO_TEST_ARTIFACTS_ROOT: /tmp/cache/data
      run: |
        mkdir -p $PERFETTO_TEST_ARTIFACTS_ROOT
        echo "first" > $PERFETTO_TEST_ARTIFACTS_ROOT/first.txt
        echo "second" > $PERFETTO_TEST_ARTIFACTS_ROOT/second.txt
        date > $PERFETTO_TEST_ARTIFACTS_ROOT/date.txt
        
        gcloud storage rsync $PERFETTO_TEST_ARTIFACTS_ROOT gs://perfetto-ci-artifacts/cache/test-data --recursive --preserve-posix
